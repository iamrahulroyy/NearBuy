version: '3.8'

services:
  backend:
    build: .
    ports:
      - "8050:8050"
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy
      typesense:
        condition: service_started
      redis: 
        condition: service_started
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - COOKIE_KEY=${COOKIE_KEY}
      - TYPESENSE_HOST=${TYPESENSE_HOST}
      - TYPESENSE_PORT=${TYPESENSE_PORT}
      - TYPESENSE_PROTOCOL=${TYPESENSE_PROTOCOL}
      - TYPESENSE_API_KEY=${TYPESENSE_API_KEY}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
    command: >
      sh -c "
        until pg_isready -h db -p 5432 -U postgres; do
          echo 'Waiting for database...'
          sleep 2
        done
        until curl -f http://typesense:8108/health; do
          echo 'Waiting for Typesense...'
          sleep 2
        done
        until redis-cli -h redis -p 6379 ping; do
          echo 'Waiting for Redis...'
          sleep 2
        done
        uvicorn main:app --host 0.0.0.0 --port 8050 --reload
      "

  db:
    image: postgis/postgis:13-3.1
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  typesense:
    image: typesense/typesense:0.24.1
    ports:
      - "8108:8108"
    command: >
      --data-dir /data
      --api-key=${TYPESENSE_API_KEY}
      --enable-cors
    volumes:
      - typesense_data:/data

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck: 
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  typesense_data:
  redis_data: